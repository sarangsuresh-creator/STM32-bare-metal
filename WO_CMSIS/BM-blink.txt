/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#define RCC  0x40021000
#define RCC_CR  (*(volatile uint32_t *)(RCC + 0x00))
#define RCC_CFGR  (*(volatile uint32_t *)(RCC + 0x04))
#define RCC_APB2ENR  (*(volatile uint32_t *)(RCC + 0x18))
#define RCC_AHBENR  (*(volatile uint32_t *)(RCC + 0x14))
#define GPIOC  0x40011000
#define GPIOC_CRH  (*(volatile uint32_t *)(GPIOC + 0x04))
#define GPIOC_BSRR  (*(volatile uint32_t *)(GPIOC + 0x10))
#define FLASH_ACR     (*(volatile uint32_t*)0x40022000)


 void SystemClock_Config(void);
 void LED_Init(void);
 void delay_ms(uint32_t ms);


 void SystemClock_Config(void) {
  RCC_CR |= (1<<0);
  while(!(RCC_CR & (1<<1)));
  FLASH_ACR |= (1 << 1);
  FLASH_ACR |=(1<<4);
  while(!(FLASH_ACR & (1<<5)));
  RCC_CFGR &= ~(1<<16);
  RCC_CFGR |= (1<<18)|(1<<19)|(1<<20)|(1<<21);
  RCC_CR |= (1<<24);
  while(!(RCC_CR & (1<<25)));
  RCC_CFGR |= (1<<1);
  while(!(RCC_CFGR & (1<<3)));
  RCC_CFGR &= ~((1<<7)|(1<<10)|(1<<13));
  RCC_AHBENR |= (1<<10);


 }

 void delay_ms(uint32_t ms) {
     for (uint32_t i = 0; i < ms * 800; i++);
 }

 void LED_Init(void){
 	RCC_APB2ENR |=(1<<4);
 	GPIOC_CRH |=(1<<20);
 	GPIOC_CRH &= ~((1<<21)|(1<<22)|(1<<23));
 }
 int main(void){
 	SystemClock_Config();
      LED_Init();
 	while(1){
 		GPIOC_BSRR = (1<<13);
 		delay_ms(500);
 		GPIOC_BSRR =(1<<29);
 		delay_ms(500);

 	}
 }
